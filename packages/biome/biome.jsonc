{
  "$schema": "https://biomejs.dev/schemas/1.9.2/schema.json",
  "vcs": { "enabled": true, "clientKind": "git", "useIgnoreFile": true, "defaultBranch": "main" },
  "files": { "ignoreUnknown": false, "ignore": [] },
  "formatter": {
    "ignore": [
      // yarn and biome's expectation of small arrays conflict causing lots of dirty changes often.
      "**/package.json",
      // probably just defer all JSON formatting to the JSON plugin
      "**/*.jsonc",
      "**/*.json",
    ],
    "enabled": true,
    "useEditorconfig": true,
    "formatWithErrors": false,
    "indentStyle": "space",
    "indentWidth": 2,
    "lineEnding": "lf",
    "lineWidth": 120,
    "attributePosition": "auto",
    "bracketSpacing": true,
  },
  "organizeImports": { "enabled": true },
  "javascript": {
    "formatter": {
      "jsxQuoteStyle": "double",
      "quoteProperties": "asNeeded",
      "trailingCommas": "all",
      "semicolons": "always",
      "arrowParentheses": "always",
      "bracketSameLine": false,
      "quoteStyle": "double",
      "attributePosition": "auto",
    },
  },
  "json": {
    "formatter": {
      "trailingCommas": "none",
    },
  },
  "linter": {
    "enabled": true,
    "rules": {
      "recommended": true,
      "a11y": {},
      "complexity": {
        "noExcessiveCognitiveComplexity": {
          "level": "error",
          "options": {
            "maxAllowedComplexity": 10,
          },
        },
        "noUselessStringConcat": "error",
      },
      "correctness": {
        "noUndeclaredDependencies": "error",
        "noUnusedImports": "error",
        "noUnusedPrivateClassMembers": "error",
        "noUnusedVariables": "error",
        "useArrayLiterals": "error",
        "useImportExtensions": "error",
      },
      "performance": {
        "noBarrelFile": "error",
        "noReExportAll": "error",
        "useTopLevelRegex": "error",
      },
      "security": {
        // All active from recommended config
      },
      "style": {
        "noDefaultExport": "error",
        "noNamespace": "error",
        "noNamespaceImport": "error",
        "noNegationElse": "error",
        "noParameterProperties": "error",
        "noShoutyConstants": "error",
        "noYodaExpression": "error",
        "useBlockStatements": "error",
        // "useConsistentArrayType": {
        //   "level": "warn",
        //   "fix": "safe",
        //   "options": {
        //     "syntax": "shorthand",
        //   },
        // },
        "useDefaultSwitchClause": "info",
        "useExplicitLengthCheck": "error",
        "useFilenamingConvention": {
          "level": "error",
          "options": {
            "strictCase": true,
            "filenameCases": ["kebab-case", "export"],
          },
        },
        "useNamingConvention": {
          "level": "error",
          "fix": "safe",
          "options": {
            "strictCase": true,
            "enumMemberCase": "PascalCase",
          },
        },
        "useShorthandArrayType": "error",
        "useThrowOnlyError": "error",
      },
      "suspicious": {
        "noConsole": {
          "level": "info",
          "fix": "safe",
          "options": {
            "allow": ["error", "warn", "info"],
          },
        },
        "noEmptyBlockStatements": "error",
        "useAwait": "error",
        "useErrorMessage": "error",
      },

      "nursery": {},
    },
  },
  "overrides": [
    {
      "include": ["**/*.jsonc", "**/dprint.json", ".vscode/*.json"],
      "json": {
        "formatter": {
          "trailingCommas": "all",
        },
        "parser": {
          "allowComments": true,
          "allowTrailingCommas": true,
        },
      },
    },
    {
      // cosmicconfig style configs
      "include": [
        // e.g. .prettierrc
        ".*rc",
        // e.g. .prettierrc.js
        ".*rc.*",
        // e.g. prettier.config.js
        "*.config.*",
      ],
      "linter": {
        "rules": {
          "performance": {
            "noBarrelFile": "off",
          },
          "style": {
            "noDefaultExport": "off",
          },
        },
      },
    },
  ],
}
