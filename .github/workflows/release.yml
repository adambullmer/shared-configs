name: Release

on:
  push:
    branches:
      - main
      - next
      - next-major
      - alpha
      - beta
    tags-ignore:
      - "**"

permissions:
  contents: read # for checkout

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance

    steps:
      - name: 🛎 Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: 🏗 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: 🛠 Configure Package Manager
        id: configure-package-manager
        run: |
          corepack enable
          corepack install
          yarn -v
          echo "cache-dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.configure-package-manager.outputs.cache-dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: 👨‍💻 Install dependencies
        run: yarn install --immutable

      - name: 🛡 Audit Provenance
        run: npm audit signatures

      - name: 📦 Build Packages
        run: yarn run build

      - name: 🚀 Release
        run: yarn run release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          YARN_NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
